<project default="build">
	<!-- Database properties - must be provided via environment variables -->
	<property environment="env"/>
	<property name="database.host" value="${env.DATABASE_HOST}"/>
	<property name="database.name" value="${env.DATABASE_NAME}"/>
	<property name="database.user" value="${env.DATABASE_USER}"/>
	<property name="database.password" value="${env.DATABASE_PASSWORD}"/>
	
	<!-- Other properties -->
	<property name="java.output.dir" value="bin/java"/>
	<property name="deploy.dir" value="red5-1.0.2/webapps/"/>
	<property name="runtime_libs.dir" value="red5-1.0.2/lib/"/>
	<property name="deploy.subdir" value="kavalok"/>
	<property name="host.address" value="127.0.0.1"/>
	<property name="host.ip" value="127.0.0.1"/>

	<target name="build">
		<antcall target="build-java"/>
		<antcall target="deploy-java"/>
	</target>

	<target name="build-java">
		<delete dir="${java.output.dir}"/>
		<mkdir dir="${java.output.dir}"/>
		<javac source="1.8" target="1.8" includeantruntime="false" srcdir="kavalok-red5/src" destdir="${java.output.dir}" encoding="utf8" debug="true">
			<classpath>
				<fileset dir="red5-1.0.2/lib" includes="**/*.jar"/>
				<fileset dir="kavalok-red5/lib" includes="**/*.jar"/>
				<fileset dir="red5-1.0.2" includes="red5-server.jar"/>
			</classpath>
		</javac>
		<copy todir="${java.output.dir}">
			<fileset dir="kavalok-red5/src/" includes="**/*.jar, **/*.xml, **/*.properties"/>
		</copy>
	</target>

	<target name="deploy-java" depends="build-java">
		<delete dir="${deploy.dir}/${deploy.subdir}" quiet="true"/>
		<copy todir="${deploy.dir}/${deploy.subdir}">
			<fileset dir="kavalok-red5" includes="**/*"/>
		</copy>
		
		<!-- Copy compiled classes and properties files -->
		<copy todir="${deploy.dir}/${deploy.subdir}/WEB-INF/classes">
			<fileset dir="${java.output.dir}"/>
		</copy>
		
		<!-- Copy red5-web.xml and properties to the classes directory where Red5 expects them -->
		<copy todir="${deploy.dir}/${deploy.subdir}/WEB-INF/classes">
			<fileset dir="kavalok-red5/WEB-INF" includes="red5-web.xml,red5-web.properties"/>
		</copy>

		<!-- Ensure JSP work directory exists for compilation -->
		<mkdir dir="${deploy.dir}/${deploy.subdir}/WEB-INF/work"/>

		<!-- Do NOT copy parent context files here; they are provided by the Red5 server runtime -->

		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/classes/kavalok.properties" token="{host.ip}" value="${host.ip}"/>
		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/classes/application.properties" token="{host.address}" value="${host.address}"/>
		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/classes/hibernate.cfg.xml" token="{database.host}" value="${database.host}"/>
		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/classes/hibernate.cfg.xml" token="{database.name}" value="${database.name}"/>
		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/classes/hibernate.cfg.xml" token="{database.user}" value="${database.user}"/>
		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/classes/hibernate.cfg.xml" token="{database.password}" value="${database.password}"/>
		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/red5-web.properties" token="{context.path}" value="/${deploy.subdir}"/>
		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/classes/red5-web.properties" token="{context.path}" value="/${deploy.subdir}"/>
		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/web.xml" token="{context.path}" value="/${deploy.subdir}"/>
	</target>

	<!-- Build only the application and deploy it into the local red5 webapps dir -->
	<target name="build-app">
		<antcall target="build-java"/>
		<antcall target="deploy-java"/>
	</target>
</project>
