<project default="build">
	<!-- Database properties - must be provided via environment variables -->
	<property environment="env"/>
	<property name="database.host" value="${env.DATABASE_HOST}"/>
	<property name="database.name" value="${env.DATABASE_NAME}"/>
	<property name="database.user" value="${env.DATABASE_USER}"/>
	<property name="database.password" value="${env.DATABASE_PASSWORD}"/>
	
	<!-- Other properties -->
	<property name="java.output.dir" value="bin/java"/>
	<property name="deploy.dir" value="red5/webapps/"/>
	<property name="runtime_libs.dir" value="red5/lib/"/>
	<property name="deploy.subdir" value="kavalok"/>
	<property name="host.address" value="127.0.0.1"/>
	<property name="host.ip" value="127.0.0.1"/>

	<target name="build">
		<antcall target="build-red5"/>
		<antcall target="build-java"/>
		<antcall target="deploy-java"/>
	</target>

	<target name="build-red5">
		<delete dir="java_output/red5"/>
		<mkdir dir="java_output/red5"/>
		<javac source="1.8" target="1.8" srcdir="red5/src" destdir="java_output/red5" encoding="utf8" debug="true" includeantruntime="false">
			<classpath>
				<fileset dir="lib" includes="**/*.jar"/>
			</classpath>
		</javac>
		<manifestclasspath property="red5.jar.classpath" jarfile="red5.jar">
			<classpath>
				<fileset dir="lib" includes="**"/>
			</classpath>
		</manifestclasspath>
		<jar destfile="red5.jar">
			<fileset dir="java_output/red5"/>
			<fileset dir="red5" includes="conf/**"/>
			<manifest>
				<attribute name="Main-Class" value="org.red5.server.Standalone"/>
				<attribute name="Class-Path" value="conf/${red5.jar.classpath}"/>
			</manifest>
		</jar>
	</target>

	<target name="build-java">
		<delete dir="${java.output.dir}"/>
		<mkdir dir="${java.output.dir}"/>
		<javac source="1.8" target="1.8" includeantruntime="false" srcdir="kavalok-red5/src" destdir="${java.output.dir}" encoding="utf8" debug="true">
			<classpath>
				<fileset dir="lib" includes="**/*.jar, **/*.xml, log4j.properties" excludes="**/*.txt"/>
				<fileset dir="." includes="red5.jar"/>
			</classpath>
		</javac>
		<copy todir="${java.output.dir}">
			<fileset dir="kavalok-red5/src/" includes="**/*.jar, **/*.xml, **/*.properties"/>
		</copy>
	</target>

	<target name="deploy-java">
		<delete dir="${deploy.dir}/${deploy.subdir}" quiet="true"/>
		<copy todir="${deploy.dir}/${deploy.subdir}/jsp">
			<fileset dir="kavalok-red5/jsp"/>
		</copy>
		<copy todir="${deploy.dir}/${deploy.subdir}/WEB-INF">
			<fileset dir="kavalok-red5/WEB-INF"/>
		</copy>
		<copy todir="${deploy.dir}/${deploy.subdir}/WEB-INF/lib">
			<fileset dir="lib" includes="hibernate-core-*.jar, slf4j-api-*.jar, logback-classic-*.jar, log4j-over-slf4j-*.jar, xml-apis-*.jar, xmlrpc-client-*.jar, xmlrpc-common-*.jar, xmlrpc-server-*.jar"/>
		</copy>
		<copy todir="${deploy.dir}/${deploy.subdir}/WEB-INF/classes">
			<fileset dir="${java.output.dir}"/>
		</copy>

		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/classes/kavalok.properties" token="{host.ip}" value="${host.ip}"/>
		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/classes/application.properties" token="{host.address}" value="${host.address}"/>
		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/classes/hibernate.cfg.xml" token="{database.host}" value="${database.host}"/>
		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/classes/hibernate.cfg.xml" token="{database.name}" value="${database.name}"/>
		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/classes/hibernate.cfg.xml" token="{database.user}" value="${database.user}"/>
		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/classes/hibernate.cfg.xml" token="{database.password}" value="${database.password}"/>
		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/red5-web.properties" token="{context.path}" value="/${deploy.subdir}"/>
		<replace file="${deploy.dir}/${deploy.subdir}/WEB-INF/web.xml" token="{context.path}" value="/${deploy.subdir}"/>
	</target>
</project>
